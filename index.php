<?php
/**
 * –ù–∞—Ä–µ–∑–∫–∞ —Ç–∞–π–ª–æ–≤: —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è maxZoom –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π
 * –ì–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è —É—Ä–æ–≤–Ω–∏: [maxZoom - levels + 1] –¥–æ [maxZoom]
 * –§–æ—Ä–º–∞—Ç: /{z}/tile-{x}-{y}.png|jpg
 */

// üîß –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
$config = [
    'sourceImage'      => 'map.png',         // –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    'outputDir'        => 'tiles/',          // –ü–∞–ø–∫–∞ –¥–ª—è —Ç–∞–π–ª–æ–≤
    'tileSize'         => 256,               // –†–∞–∑–º–µ—Ä —Ç–∞–π–ª–∞
    'maxZoom'          => 10,                // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å zoom (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10)
    'levelsToGenerate' => 4,                 // –°–∫–æ–ª—å–∫–æ —É—Ä–æ–≤–Ω–µ–π –Ω–∞—Ä–µ–∑–∞—Ç—å (—Å –∫–æ–Ω—Ü–∞)
    'format'           => 'png',             // 'png' –∏–ª–∏ 'jpg'
    'jpegQuality'      => 95,                // –ö–∞—á–µ—Å—Ç–≤–æ JPEG (1-100)
];

$sourceImage      = $config['sourceImage'];
$outputDir        = $config['outputDir'];
$tileSize         = $config['tileSize'];
$maxZoom          = $config['maxZoom'];
$levelsToGenerate = $config['levelsToGenerate'];
$format           = strtolower($config['format']);
$jpegQuality      = $config['jpegQuality'];

if (!in_array($format, ['png', 'jpg'])) {
    die("–û—à–∏–±–∫–∞: —Ñ–æ—Ä–º–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'png' –∏–ª–∏ 'jpg'. –£–∫–∞–∑–∞–Ω–æ: $format\n");
}

if ($levelsToGenerate < 1) {
    die("–û—à–∏–±–∫–∞: levelsToGenerate –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å >= 1\n");
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
if (!file_exists($sourceImage)) {
    die("–û—à–∏–±–∫–∞: –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: $sourceImage\n");
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏
if (!is_dir($outputDir)) {
    mkdir($outputDir, 0755, true);
}

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
$imageInfo = getimagesize($sourceImage);
if (!$imageInfo) {
    die("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.\n");
}

$mimeType = $imageInfo['mime'];
$width    = $imageInfo[0];
$height   = $imageInfo[1];

echo "üìè –ò—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {$width}x{$height} px\n";
echo "üìå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π zoom: $maxZoom\n";
echo "üéØ –£—Ä–æ–≤–Ω–µ–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: $levelsToGenerate\n";

// --- –†–ê–°–ß–Å–¢ –î–ò–ê–ü–ê–ó–û–ù–ê ZOOM ---
$startZoom = $maxZoom - $levelsToGenerate + 1;

if ($startZoom < 0) {
    echo "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: startZoom = $startZoom. –£–º–µ–Ω—å—à–∞–µ–º levelsToGenerate –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ.\n";
    $startZoom = 0;
    $levelsToGenerate = $maxZoom + 1;
    echo "üîÅ –¢–µ–ø–µ—Ä—å: levelsToGenerate = $levelsToGenerate, startZoom = 0\n";
}

echo "üìä –î–∏–∞–ø–∞–∑–æ–Ω zoom: –æ—Ç $startZoom –¥–æ $maxZoom (–≤—Å–µ–≥–æ $levelsToGenerate —É—Ä–æ–≤–Ω–µ–π)\n";

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function loadImage($path, $mimeType) {
    switch ($mimeType) {
        case 'image/jpeg':
        case 'image/jpg':
            return imagecreatefromjpeg($path);
        case 'image/png':
            return imagecreatefrompng($path);
        case 'image/webp':
            return imagecreatefromwebp($path);
        default:
            die("–û—à–∏–±–∫–∞: –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è MIME: $mimeType\n");
    }
}

$image = loadImage($sourceImage, $mimeType);
if (!$image) {
    die("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.\n");
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è PNG)
$hasAlpha = false;
if ($format === 'png' && $mimeType === 'image/png') {
    $hasAlpha = (imagecolortransparent($image) !== -1) || (imagecolorstotal($image) < 256);
}

// --- –ì–õ–ê–í–ù–´–ô –¶–ò–ö–õ: –æ—Ç $startZoom –¥–æ $maxZoom ---
for ($zoom = $startZoom; $zoom <= $maxZoom; $zoom++) {
    $scale = pow(2, $maxZoom - $zoom);
    $scaledWidth  = max(1, (int) ceil($width  / $scale));
    $scaledHeight = max(1, (int) ceil($height / $scale));

    $tilesX = (int) ceil($scaledWidth  / $tileSize);
    $tilesY = (int) ceil($scaledHeight / $tileSize);

    echo "‚û°Ô∏è  Zoom $zoom: {$scaledWidth}x{$scaledHeight} px ‚Üí {$tilesX}x{$tilesY} —Ç–∞–π–ª–æ–≤\n";

    // –°–æ–∑–¥–∞—ë–º —É–º–µ–Ω—å—à–µ–Ω–Ω—É—é –∫–æ–ø–∏—é
    $scaledImage = imagecreatetruecolor($scaledWidth, $scaledHeight);

    if ($format === 'png' && $hasAlpha) {
        $transparent = imagecolorallocatealpha($scaledImage, 0, 0, 0, 127);
        imagefill($scaledImage, 0, 0, $transparent);
        imagesavealpha($scaledImage, true);
    } else {
        $bg = imagecolorallocate($scaledImage, 255, 255, 255);
        imagefill($scaledImage, 0, 0, $bg);
    }

    imagecopyresampled($scaledImage, $image, 0, 0, 0, 0,
        $scaledWidth, $scaledHeight,
        $width, $height
    );

    // –ü–∞–ø–∫–∞: /tiles/7/, /tiles/8/ –∏ —Ç.–¥.
    $zoomDir = $outputDir . $zoom . '/';
    if (!is_dir($zoomDir)) {
        mkdir($zoomDir, 0755, true);
    }

    // –ù–∞—Ä–µ–∑–∫–∞ –Ω–∞ —Ç–∞–π–ª—ã
    for ($y = 0; $y < $tilesY; $y++) {
        for ($x = 0; $x < $tilesX; $x++) {
            $tileImage = imagecreatetruecolor($tileSize, $tileSize);

            if ($format === 'png' && $hasAlpha) {
                $transparent = imagecolorallocatealpha($tileImage, 0, 0, 0, 127);
                imagefill($tileImage, 0, 0, $transparent);
                imagesavealpha($tileImage, true);
            } else {
                $bg = imagecolorallocate($tileImage, 255, 255, 255);
                imagefill($tileImage, 0, 0, $bg);
            }

            $srcX = $x * $tileSize;
            $srcY = $y * $tileSize;
            $srcW = min($tileSize, $scaledWidth  - $srcX);
            $srcH = min($tileSize, $scaledHeight - $srcY);

            imagecopy($tileImage, $scaledImage, 0, 0, $srcX, $srcY, $srcW, $srcH);

            // üü© –ò–º—è: /{z}/tile-{x}-{y}.png –∏–ª–∏ .jpg
            $fileName = "tile-{$x}-{$y}." . $format;
            $tilePath = $zoomDir . $fileName;

            if ($format === 'png') {
                imagepng($tileImage, $tilePath, 0); // –±–µ–∑ —Å–∂–∞—Ç–∏—è
            } else {
                imagejpeg($tileImage, $tilePath, $jpegQuality);
            }

            imagedestroy($tileImage);
        }
    }

    imagedestroy($scaledImage);
}

imagedestroy($image);

echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $outputDir\n";
echo "üìå –î–∏–∞–ø–∞–∑–æ–Ω zoom: –æ—Ç $startZoom –¥–æ $maxZoom\n";
echo "üìå –ò—Å–ø–æ–ª—å–∑—É–π –≤ Leaflet: tiles/{z}/tile-{x}-{y}.$format\n";
?>
